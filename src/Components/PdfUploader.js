import React, { useState } from 'react';















import { HiUpload, HiDocumentText, HiX } from 'react-icons/hi';































const PdfUploader = () => {















  const [file, setFile] = useState(null);















  const [loading, setLoading] = useState(false);































  const handleFileChange = (event) => {















    const selectedFile = event.target.files[0];















    if (selectedFile && selectedFile.type === 'application/pdf') {















      setFile(selectedFile);















    } else {















      alert('Please select a valid PDF file');















    }















  };































  const handleUpload = async () => {















    if (!file) return;















    















    setLoading(true);















    try {















      // TODO: Implement PDF processing logic















      await new Promise(resolve => setTimeout(resolve, 2000)); // Simulated delay















      alert('PDF processed successfully!');















    } catch (error) {















      console.error('Error processing PDF:', error);















      alert('Error processing PDF');















    } finally {















      setLoading(false);















    }















  };































  return (















    <div className="bg-white/80 backdrop-blur-sm rounded-xl shadow-sm border border-border/50 p-6 mb-6">















      <h3 className="text-lg font-semibold mb-4 text-text-dark">Import from PDF</h3>















      















      <div className="border-2 border-dashed border-primary/30 rounded-lg p-6 text-center bg-primary/5">















        {!file ? (















          <div className="space-y-4">















            <div className="flex justify-center">















              <HiUpload className="text-4xl text-primary" />















            </div>















            <div>















              <p className="text-text-light">Drag and drop your PDF here or</p>















              <label className="mt-2 inline-block px-4 py-2 bg-primary text-white rounded-lg cursor-pointer 















                hover:bg-primary-dark transition-all hover:shadow-md">















                Browse Files















                <input















                  type="file"















                  accept=".pdf"















                  onChange={handleFileChange}















                  className="hidden"















                />















              </label>















            </div>















          </div>















        ) : (















          <div className="flex items-center justify-between bg-white p-4 rounded-lg border border-border">















            <div className="flex items-center space-x-3">















              <HiDocumentText className="text-2xl text-primary" />















              <span className="text-text">{file.name}</span>















            </div>















            <button















              onClick={() => setFile(null)}















              className="p-2 hover:bg-red-50 text-red-500 rounded-full transition-colors"















            >















              <HiX />















            </button>















          </div>















        )}















      </div>































      {file && (















        <button















          onClick={handleUpload}















          disabled={loading}















          className={`mt-4 w-full py-2.5 px-4 rounded-lg text-white font-medium transition-all















            ${loading 















              ? 'bg-gray-400 cursor-not-allowed' 















              : 'bg-primary hover:bg-primary-dark hover:shadow-md'















            }`}















        >















          {loading ? 'Processing...' : 'Convert to Flashcards'}















        </button>















      )}















    </div>















  );















};































export default PdfUploader; 














